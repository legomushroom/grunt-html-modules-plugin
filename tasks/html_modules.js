// Generated by CoffeeScript 1.6.2
(function() {
  "use strict";  module.exports = function(grunt) {
    return grunt.registerMultiTask("html_modules", "allows to include small html parts in other html", function() {
      var $, Files, data, filesStorage, fs, options;

      options = this.options({
        punctuation: ".",
        separator: ", "
      });
      fs = require('fs');
      $ = require('jquery-deferred');
      data = {};
      Files = (function() {
        function Files(o) {
          this.o = o;
          this.fs = fs;
          this.dir = 'tasks/src/';
          this.files = {};
        }

        Files.prototype.readFiles = function() {
          var _this = this;

          this.dfr = new $.Deferred;
          this.fs.readdir(this.dir, function(err, files) {
            if (err) {
              throw err;
            }
            files = _this.getValidFiles(files);
            return files.forEach(function(file, i) {
              return fs.readFile(_this.dir + file, 'utf-8', function(err, html) {
                err && ((function() {
                  throw err;
                })());
                _this.files[file.split('.')[0]] = html;
                if (i === files.length - 1) {
                  return _this.dfr.resolve();
                }
              });
            });
          });
          return this.dfr.promise();
        };

        Files.prototype.getValidFiles = function(files) {
          return files.filter(function(file) {
            return file.match(/.html$/gi);
          });
        };

        return Files;

      })();
      filesStorage = new Files;
      filesStorage.readFiles();
      return this.files.forEach(function(f) {
        var file, src;

        src = f.src.filter(function(filepath) {
          if (!grunt.file.exists(filepath)) {
            grunt.log.warn("Source file \"" + filepath + "\" not found.");
            return false;
          } else {
            return true;
          }
        }).map(function(filepath) {
          return grunt.file.read(filepath);
        });
        file = src[0];
        return console.log(file);
      });
    });
  };

}).call(this);
